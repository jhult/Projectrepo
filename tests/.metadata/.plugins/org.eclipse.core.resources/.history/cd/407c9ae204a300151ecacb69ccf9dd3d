package com.qa141.db;
/*
 * Scenario covered by scripts: verify Error messages for Database fields


 * Steps:
 * 1. Go to Cloud URl
 * 2. Login to to MyServices Page
 * 3. Launch DB Service > Verify appropriate checkpoint on DB page.
 * 4. Verify error messages for Database fields
 * 5. Logout.
 */
import java.util.concurrent.TimeUnit;

import org.openqa.selenium.By;
import org.openqa.selenium.support.ui.Select;
import org.testng.Assert;
import org.testng.annotations.Test;

import com.opc.common.Browser;
import com.opc.common.Login;
import com.opc.util.Utility;
import com.safc.configuration.BaseTest;
import com.safc.configuration.BrowserType;
import com.safc.configuration.Config;

public class C9_DB_12_DatabaseError_Test extends BaseTest{

	Select select;
	

     @Test(dataProvider = "browserType", dataProviderClass = BrowserType.class)
	   public void test(String browserName) {
	 
    	 try{  
    		 System.out.println("Executing TestCase:-  " +  this.getClass().getSimpleName());	 
    		 System.out.println(browserName);
  		driver = Browser.browserToRun(driver1, browserName);
  		driver.manage().timeouts().implicitlyWait(Config.WAIT_FOR_SECONDS, TimeUnit.SECONDS);
  			  
  		driver.get(Config.APP_URL); 
  		driver.manage().timeouts().implicitlyWait(Config.WAIT_FOR_SECONDS, TimeUnit.SECONDS);
  		Thread.sleep(5000);
		   
		   /* ---------- SignIN to MyServices  ---------- */	   
		   Utility.myServicePage(driver);
		   driver.manage().timeouts().pageLoadTimeout(Config.WAIT_FOR_SECONDS, TimeUnit.SECONDS);
			Thread.sleep(10000); 
			
  	    Login.loginToMyService(driver, Config.USERID, Config.PASSWORD, Config.DOMAIN);
  	    driver.manage().timeouts().implicitlyWait(Config.WAIT_FOR_SECONDS, TimeUnit.SECONDS);
  	    Thread.sleep(20000);
  	       

  	    /* ----- Navigating to Service -----*/	
  	  Utility.selectPlatformService(driver, "database");
	  driver.manage().timeouts().implicitlyWait(Config.WAIT_FOR_SECONDS, TimeUnit.SECONDS);
	  driver.manage().timeouts().pageLoadTimeout(Config.WAIT_FOR_SECONDS, TimeUnit.SECONDS);
		Thread.sleep(10000); 
     
	  String DB_URL = Utility.getDBUrl(driver, By.xpath(".//*[@id='pt1:pt2:currentTabHTMLName:ot131']/span"));
	  driver.navigate().to(DB_URL);
	  driver.manage().timeouts().implicitlyWait(Config.WAIT_FOR_SECONDS, TimeUnit.SECONDS);
	  Thread.sleep(30000);
       
	// below Utility.reLogin(driver) code changes for15.3.1 
	  	Utility.reLogin(driver)  	;
	       
	       /* ----- Navigating to DB Cloud Services Control Window - future use -----*/
	 /*      Set allWindowHandles = driver.getWindowHandles();
		   int win = allWindowHandles.size();
	       System.out.println("no. of windows open  "  + win);
	       Thread.sleep(5000);
	       String window1 = (String) allWindowHandles.toArray()[1];
//	       System.out.println("windows title  "  + window1);
	       driver.switchTo().window(window1);	
	       driver.manage().timeouts().implicitlyWait(Config.WAIT_FOR_SECONDS, TimeUnit.SECONDS);
//	       driver.manage().window().maximize();
      Thread.sleep(20000);
//      System.out.println("new windows title  "+ driver.getTitle());
  */
	       
	     Assert.assertEquals("Application Builder", driver.findElement(By.xpath(".//*[@id='a_Header_menu_0i']")).getText());
	      
/*----- Launch Application Builder ------*/
driver.findElement(By.xpath(".//*[@id='a_Header_menu_0i']")).click();
driver.manage().timeouts().implicitlyWait(Config.WAIT_FOR_SECONDS, TimeUnit.SECONDS);
driver.manage().timeouts().pageLoadTimeout(Config.WAIT_FOR_SECONDS, TimeUnit.SECONDS);
Thread.sleep(5000);

/*----- Go to DataBase Applications ------*/
driver.findElement(By.xpath(".//*[@id='a_Header_menu_0']/span/span")).click();
driver.manage().timeouts().implicitlyWait(Config.WAIT_FOR_SECONDS, TimeUnit.SECONDS);
driver.manage().timeouts().pageLoadTimeout(Config.WAIT_FOR_SECONDS, TimeUnit.SECONDS);
Thread.sleep(5000);

driver.findElement(By.xpath(".//*[@id='a_Header_menu_0_0i']")).click();
driver.manage().timeouts().implicitlyWait(Config.WAIT_FOR_SECONDS, TimeUnit.SECONDS);
driver.manage().timeouts().pageLoadTimeout(Config.WAIT_FOR_SECONDS, TimeUnit.SECONDS);
Thread.sleep(5000);


/*----- Click create  ------*/
driver.findElement(By.xpath(".//*[@id='B1338904799030874']")).click();
driver.manage().timeouts().implicitlyWait(Config.WAIT_FOR_SECONDS, TimeUnit.SECONDS);
driver.manage().timeouts().pageLoadTimeout(Config.WAIT_FOR_SECONDS, TimeUnit.SECONDS);
Thread.sleep(10000);

	    /*------Application ID reserved------*/
	    
	    driver.findElement(By.xpath(".//*[@id='P3000_APPLICATION_ID']")).clear();
	    driver.findElement(By.xpath(".//*[@id='P3000_APPLICATION_ID']")).sendKeys("12345");
	    
	    System.out.println("Application Id error");
	    driver.findElement(By.xpath(".//*[@id='B24093917855851654']")).click();
	    driver.manage().timeouts().implicitlyWait(Config.WAIT_FOR_SECONDS, TimeUnit.SECONDS);
	    Thread.sleep(10000);
	    
	    System.out.println(driver.findElement(By.xpath(".//*[@id='errorMsg-Message']")).getText());
	    
	    Assert.assertTrue(driver.findElement(By.xpath(".//*[@id='errorMsg-Message']")).getText().contains("1 error has occurred"));
	    Thread.sleep(1000); 
	    
	    Assert.assertTrue(driver.findElement(By.xpath(".//*[@id='errorMsg-Message']")).getText().contains("Application ID is reserved. (Go to error)"));
	    Thread.sleep(1000); 
	   
	  /*---------Enter invalid application id other than numeric------------*/
	    driver.findElement(By.xpath(".//*[@id='P3000_APPLICATION_ID']")).clear();
	    driver.findElement(By.xpath(".//*[@id='P3000_APPLICATION_ID']")).sendKeys("abc");
	
	    
	    driver.findElement(By.xpath(".//*[@id='B24093917855851654']")).click();
	    driver.manage().timeouts().implicitlyWait(Config.WAIT_FOR_SECONDS, TimeUnit.SECONDS);
	    Thread.sleep(10000);
	    
	    System.out.println(driver.findElement(By.xpath(".//*[@id='errorMsg-Message']")).getText());
	    
	    Assert.assertTrue(driver.findElement(By.xpath(".//*[@id='errorMsg-Message']")).getText().contains("2 errors have occurred"));
	    Thread.sleep(1000); 
	    
	    Assert.assertTrue(driver.findElement(By.xpath(".//*[@id='errorMsg-Message']/ul/li[1]")).getText().contains("Application must be Numeric."));
	    Thread.sleep(1000); 
 
	    Assert.assertTrue(driver.findElement(By.xpath(".//*[@id='errorMsg-Message']/ul/li[2]")).getText().contains("Application ID must be a positive, whole number."));
	    Thread.sleep(1000);
	    
	   // driver.findElement(By.xpath("//div[@id='aErrorMessage']/ul/li[1]/a")).click();
	   // Thread.sleep(5000);
	    
	    //driver.findElement(By.xpath("//div[@id='aErrorMessage']/ul/li[2]/a")).click();
	   // Thread.sleep(5000);
	    
	    /*----- Logout ------*/
	       driver.findElement(By.xpath(".//*[@id='page-header']/div[1]/div/a[2]/span")).click();
	       System.out.println("Test Completed:-  " +  this.getClass().getSimpleName());	
 	    } 
     	 catch(Exception err) { 
         	 Assert.fail(err.getMessage());
          }
      }
  	public void testCleanUp()   {
  		driver.manage().deleteAllCookies();
  	
  		//  Quit -closes all the open windows
  	driver.quit();
  	}
}